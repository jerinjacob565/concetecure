#include <DHT.h>
#include <WiFiClient.h>
#include <ESP8266WiFi.h>
#include <ThingSpeak.h>

// Replace with your network credentials
const char* ssid = "your_SSID";
const char* password = "your_PASSWORD";

// ThingSpeak Settings
unsigned long channelID = YOUR_CHANNEL_ID;
const char* writeAPIKey = "YOUR_WRITE_API_KEY";

// Initialize DHT sensor
#define DHTPIN D1 // GPIO pin where your DHT sensor is connected (change if necessary)
#define DHTTYPE DHT22 // DHT 22 (AM2302)

DHT dht(DHTPIN, DHTTYPE);

// Initialize WiFi client
WiFiClient client;

void setup() {
  // Initialize serial communication
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Initialize ThingSpeak
  ThingSpeak.begin(client);

  // Initialize DHT sensor
  dht.begin();
}

void loop() {
  // Read temperature and humidity from the sensor
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Failed to read from DHT sensor!");
    delay(2000);
    return;
  }

  // Print temperature and humidity
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.print(" Â°C, Humidity: ");
  Serial.print(humidity);
  Serial.println(" %");

  // Update ThingSpeak channel
  ThingSpeak.writeField(channelID, 1, temperature, writeAPIKey);
  ThingSpeak.writeField(channelID, 2, humidity, writeAPIKey);

  // Wait for a few seconds before sending the next update
  delay(60000); // Update every 60 seconds
}
Make sure to replace your_SSID, your_PASSWORD, YOUR_CHANNEL_ID, and YOUR_WRITE_API_KEY with your own values. You'll need to create a ThingSpeak account and set up a channel with two fields for temperature and humidity to obtain the channel ID and write API key.

This code reads temperature and humidity data from the DHT sensor and sends it to ThingSpeak at regular intervals. You can then visualize and analyze the data on the ThingSpeak platform.

Remember that this is a basic example, and you can expand it to include more sensors or integrate other IoT platforms based on your project requirements. Additionally, consider adding error handling and security features depending on your specific use case.
